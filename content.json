{"meta":{"title":"龚一半的博客","subtitle":"","description":"","author":"龚一半","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"日期类代码参考","slug":"日期类","date":"2019-11-29T05:02:40.000Z","updated":"2019-11-29T04:47:05.961Z","comments":true,"path":"2019/11/29/日期类/","link":"","permalink":"http://yoursite.com/2019/11/29/%E6%97%A5%E6%9C%9F%E7%B1%BB/","excerpt":"","text":"日期类前言：本来只是应付一下作业，所以就按照老师的要求来只简单地进行了运算符的重载和输入输出的重载以及封装，没有对逻辑运算符和赋值运算符进行重载，导致实现类的时候代码量陡增，变得十分冗杂，而且没办法方便的按需求修改，改动的话可能会出很多bug。 date.h1234567891011121314151617181920212223242526#pragma once#include&lt;iostream&gt;using namespace std;class date&#123;private: int year, month, day;public: date(int y, int m, int d); date(); ~date();//析构函数 date(date&amp;);//拷贝构造函数 date operator + (int);//加号运算符号 date operator - (int);//减号运算符号 int operator - (date&amp;);//减号运算符号并排序 void setyear(int); void setmonth(int); void setday(int); int getyear(); int getmonth(); int getday(); friend ostream&amp; operator &lt;&lt; (ostream&amp; out, date&amp; d); friend istream&amp; operator &gt;&gt; (istream&amp; in, date&amp; d);&#125;;//Copyright©[2019]HalfGong.All rights Reserved date.cppinclude \"pch.h\"#include\"date.h\"#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;date::date(int y, int m, int d)&#123; this-&gt;year = y; this-&gt;month = m; this-&gt;day = d;&#125;int mon1[13] = &#123; 0,31,28,31,30,31,30,31,31,30,31,30,31 &#125;;int mon2[13] = &#123; 0,31,29,31,30,31,30,31,31,30,31,30,31 &#125;;date::date()&#123;&#125;date::~date()&#123;&#125;date::date(date&amp; d)&#123; year = d.year; month = d.month; day = d.day;&#125;date date::operator + (int num)&#123; date t; t.year = this-&gt;year; t.month = this-&gt;month; t.day = this-&gt;day; date n; int flag = 0; while (num) &#123; flag = 0; num--; day++; if (month == 2) &#123; if (year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0) &#123; if (day &gt; 29) &#123; day = 1; flag = 1; &#125; &#125; if (!(year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0)) &#123; if (day &gt; 28) &#123; day = 1; flag = 1; &#125; &#125; &#125; if (month == 4 || month == 6 || month == 9 || month == 11) &#123; if (day &gt; 30) &#123; day = 1; flag = 1; &#125; &#125; if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) &#123; if (day &gt; 31) &#123; day = 1; flag = 1; &#125; &#125; if (flag == 1) &#123; month++; &#125; if (month &gt; 12) &#123; month = 1; year++; &#125; &#125; n.year = year; n.month = month; n.day = day; year = t.year; month = t.month; day = t.day; cout &lt;&lt; n; return n;&#125;date date::operator - (int num)&#123; date t; t.year = this-&gt;year; t.month = this-&gt;month; t.day = this-&gt;day; date n; int flag = 0; while (num) &#123; flag = 0; num--; day--; if (day == 0) &#123; if (month == 3) &#123; if (year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0) &#123; day = 29; flag = 1; &#125; if (!(year % 4 == 0 &amp;&amp; year % 100 != 0 || year % 400 == 0)) &#123; day = 28; flag = 1; &#125; &#125; if (month == 5 || month == 7 || month ==10 || month == 12) &#123; day = 30; flag = 1; &#125; if (month==1 || month == 2 || month == 4 || month == 6 || month == 8 || month == 9 || month == 11) &#123; day = 31; flag = 1; &#125; if (flag == 1) &#123; month--; &#125; if (month == 0) &#123; month = 12; day = 31; year--; &#125; &#125; &#125; n.year = year; n.month = month; n.day = day; year = t.year; month = t.month; day = t.day; cout &lt;&lt; n; return n;&#125;int date::operator - (date&amp; b)&#123; int ans=0; date m; m.year = this-&gt;year; m.month = this-&gt;month; m.day = this-&gt;day; date n1 = b, n2 = m; cout &lt;&lt; \"你输入的两个年份正确的顺序是：\"; if (n2.year &gt; n1.year) &#123; cout &lt;&lt; b &lt;&lt; \"-&gt;\" &lt;&lt; m; while (n1.year != n2.year||n1.month != n2.month||n1.day != n2.day) &#123; n1.day++; ans++; if (n1.year % 4 == 0 || n1.year % 100 != 0 &amp;&amp; n1.year % 400 == 0) &#123; if (n1.day &gt; mon2[n1.month]) &#123; n1.day = 1; n1.month++; &#125; if (n1.month &gt; 12) &#123; n1.year++; n1.month = 1; &#125; &#125; else &#123; if (n1.day &gt; mon1[n1.month]) &#123; n1.day = 1; n1.month++; &#125; if (n1.month &gt; 12) &#123; n1.year++; n1.month = 1; &#125; &#125; &#125; &#125; else if (n2.year &lt; n1.year) &#123; cout &lt;&lt; m &lt;&lt; \"-&gt;\" &lt;&lt; b; while (n1.year != n2.year||n1.month != n2.month||n1.day != n2.day) &#123; n2.day++; ans++; if (n2.year % 4 == 0 || n2.year % 100 != 0 &amp;&amp; n2.year % 400 == 0) &#123; if (n2.day &gt; mon2[n1.month]) &#123; n2.day = 1; n2.month++; &#125; if (n2.month &gt; 12) &#123; n2.year++; n2.month = 1; &#125; &#125; else &#123; if (n2.day &gt; mon1[n2.month]) &#123; n2.day = 1; n2.month++; &#125; if (n2.month &gt; 12) &#123; n2.year++; n2.month = 1; &#125; &#125; &#125; &#125; else &#123; if (n2.month &gt; n1.month) &#123; cout &lt;&lt; b &lt;&lt; \"-&gt;\" &lt;&lt; m; while (n1.year != n2.year||n1.month != n2.month||n1.day != n2.day) &#123; n1.day++; ans++; if (n1.year % 4 == 0 || n1.year % 100 != 0 &amp;&amp; n1.year % 400 == 0) &#123; if (n1.day &gt; mon2[n1.month]) &#123; n1.day = 1; n1.month++; &#125; if (n1.month &gt; 12) &#123; n1.year++; n1.month = 1; &#125; &#125; else &#123; if (n1.day &gt; mon1[n1.month]) &#123; n1.day = 1; n1.month++; &#125; if (n1.month &gt; 12) &#123; n1.year++; n1.month = 1; &#125; &#125; &#125; &#125; else if (n2.month &lt; n1.month) &#123; cout &lt;&lt; m &lt;&lt; \"-&gt;\" &lt;&lt; b; while (n1.year != n2.year||n1.month != n2.month||n1.day != n2.day) &#123; n2.day++; ans++; if (n2.year % 4 == 0 || n2.year % 100 != 0 &amp;&amp; n2.year % 400 == 0) &#123; if (n2.day &gt; mon2[n1.month]) &#123; n2.day = 1; n2.month++; &#125; if (n2.month &gt; 12) &#123; n2.year++; n2.month = 1; &#125; &#125; else &#123; if (n2.day &gt; mon1[n2.month]) &#123; n2.day = 1; n2.month++; &#125; if (n2.month &gt; 12) &#123; n2.year++; n2.month = 1; &#125; &#125; &#125; &#125; else &#123; if (n2.day &gt; n1.day) &#123; cout &lt;&lt; m &lt;&lt; \"-&gt;\" &lt;&lt; b; while (n1.year != n2.year||n1.month != n2.month||n1.day != n2.day) &#123; n1.day++; ans++; if (n1.year % 4 == 0 || n1.year % 100 != 0 &amp;&amp; n1.year % 400 == 0) &#123; if (n1.day &gt; mon2[n1.month]) &#123; n1.day = 1; n1.month++; &#125; if (n1.month &gt; 12) &#123; n1.year++; n1.month = 1; &#125; &#125; else &#123; if (n1.day &gt; mon1[n1.month]) &#123; n1.day = 1; n1.month++; &#125; if (n1.month &gt; 12) &#123; n1.year++; n1.month = 1; &#125; &#125; &#125; &#125; else if (n2.day &lt; n1.day) &#123; cout &lt;&lt; m &lt;&lt; \"-&gt;\" &lt;&lt; b; while (n1.year != n2.year||n1.month != n2.month||n1.day != n2.day) &#123; n2.day++; ans++; if (n2.year % 4 == 0 || n2.year % 100 != 0 &amp;&amp; n2.year % 400 == 0) &#123; if (n2.day &gt; mon2[n1.month]) &#123; n2.day = 1; n2.month++; &#125; if (n2.month &gt; 12) &#123; n2.year++; n2.month = 1; &#125; &#125; else &#123; if (n2.day &gt; mon1[n2.month]) &#123; n2.day = 1; n2.month++; &#125; if (n2.month &gt; 12) &#123; n2.year++; n2.month = 1; &#125; &#125; &#125; &#125; else &#123; cout &lt;&lt; \"你输入的是同一天\"; &#125; &#125; &#125; cout &lt;&lt; \"\\n\" &lt;&lt; \"这两个日期相隔的天数为：\"; cout &lt;&lt; ans &lt;&lt; endl; return ans;&#125;void date::setyear(int year)&#123; this-&gt;year = year;&#125;void date::setmonth(int month)&#123; this-&gt;month = month;&#125;void date::setday(int day)&#123; this-&gt;day = day;&#125;int date::getyear()&#123; return this-&gt;year;&#125;int date::getmonth()&#123; return this-&gt;month;&#125;int date::getday()&#123; return this-&gt;day;&#125;ostream&amp; operator &lt;&lt; (ostream&amp; out, date&amp; d)&#123; cout &lt;&lt; d.getyear() &lt;&lt; \".\" &lt;&lt; d.getmonth() &lt;&lt; \".\" &lt;&lt; d.getday(); // TODO: 在此处插入 return 语句 return out;&#125;istream&amp; operator &gt;&gt; (istream&amp; in, date&amp; d) &#123; char n; int year_ = 0, month_ = 0, day_ = 0; cin &gt;&gt; year_ &gt;&gt; n &gt;&gt; month_ &gt;&gt; n &gt;&gt; day_; d.setyear(year_); d.setmonth(month_); d.setday(day_); // TODO: 在此处插入 return 语句 return in;&#125;//Copyright©[2019]HalfGong.All rights Reserved main函数我就不写了，因为这个类写的并不好，只是用做参考","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"时间类代码参考","slug":"时间类","date":"2019-11-27T06:43:40.000Z","updated":"2019-11-27T06:58:04.976Z","comments":true,"path":"2019/11/27/时间类/","link":"","permalink":"http://yoursite.com/2019/11/27/%E6%97%B6%E9%97%B4%E7%B1%BB/","excerpt":"","text":"时间类前言：为了应付邓涛的作业，找时间把时间类写了一下主要还是重载了运算与输出符 Time.h1234567891011121314151617181920212223242526272829303132#pragma once#include&lt;iostream&gt;using namespace std;class Time&#123;private: int Hour; int Minute; int Second;public: Time(); ~Time(); Time(Time&amp;); void SetHour(int hour); void SetMinute(int minute); void SetSecond(int second); int GetHour(); int GetMinute(); int GetSecond(); Time operator - (Time&amp;); Time operator + (Time&amp;); Time operator = (Time&amp;); bool operator &lt; (Time&amp;); bool operator &gt; (Time&amp;); bool operator == (Time&amp;); void sort(Time); friend ostream&amp; operator &lt;&lt; (ostream&amp; out, Time&amp; T); friend istream&amp; operator &gt;&gt; (istream&amp; in, Time&amp; T);&#125;;//Copyright©[2019]HalfGong.All rights Reserved Time.cpp123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216#include \"pch.h\"#include \"Time.h\"Time::Time()&#123;&#125;Time::~Time()&#123;&#125;Time::Time(Time &amp; T)&#123; this-&gt;Hour = T.Hour; this-&gt;Minute = T.Minute; this-&gt;Second = T.Second;&#125;void Time::SetHour(int hour)&#123; this-&gt;Hour = hour;&#125;void Time::SetMinute(int minute)&#123; this-&gt;Minute = minute;&#125;void Time::SetSecond(int second)&#123; this-&gt;Second = second;&#125;int Time::GetHour()&#123; return this-&gt;Hour;&#125;int Time::GetMinute()&#123; return this-&gt;Minute;&#125;int Time::GetSecond()&#123; return this-&gt;Second;&#125;Time Time::operator-(Time &amp;T)&#123; this-&gt;Second = this-&gt;Second-T.Second; if (this-&gt;Second &lt; 0) &#123; this-&gt;Second += 60; this-&gt;Minute--; &#125; this-&gt;Minute = this-&gt;Minute-T.Minute; if (this-&gt;Minute &lt; 0) &#123; this-&gt;Minute += 60; this-&gt;Hour--; &#125; this-&gt;Hour = this-&gt;Hour - T.Hour; if (this-&gt;Hour &lt; 0) &#123; this-&gt;Hour += 24; &#125; return *this;&#125;Time Time::operator+(Time &amp;T)&#123; this-&gt;Second = this-&gt;Second + T.Second; if (this-&gt;Second &gt; 59) &#123; this-&gt;Second -= 60; this-&gt;Minute++; &#125; this-&gt;Minute = this-&gt;Minute + T.Minute; if (this-&gt;Minute &gt; 59) &#123; this-&gt;Minute -= 60; this-&gt;Hour++; &#125; this-&gt;Hour = this-&gt;Hour + T.Hour; if (this-&gt;Hour &gt;= 24) &#123; this-&gt;Hour -= 24; &#125; return *this;&#125;Time Time::operator=(Time &amp;T)&#123; this-&gt;Hour = T.Hour; this-&gt;Minute = T.Minute; this-&gt;Second = T.Second; return T;&#125;bool Time::operator&lt;(Time &amp;T)&#123; if (this-&gt;Hour &gt; T.Hour) &#123; return false; &#125; else if (this-&gt;Hour &lt; T.Hour) &#123; return true; &#125; else &#123; if (this-&gt;Minute &gt; T.Minute) &#123; return false; &#125; else if (this-&gt;Minute &lt; T.Minute) &#123; return true; &#125; else &#123; if (this-&gt;Second &gt; T.Second) &#123; return false; &#125; else if (this-&gt;Second &lt; T.Second) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;&#125;bool Time::operator&gt;(Time &amp;T)&#123; if (this-&gt;Hour &gt; T.Hour) &#123; return true; &#125; else if (this-&gt;Hour &lt; T.Hour) &#123; return false; &#125; else &#123; if (this-&gt;Minute &gt; T.Minute) &#123; return true; &#125; else if (this-&gt;Minute &lt; T.Minute) &#123; return false; &#125; else &#123; if (this-&gt;Second &gt; T.Second) &#123; return true; &#125; else if (this-&gt;Second &lt; T.Second) &#123; return false; &#125; else &#123; return false; &#125; &#125; &#125;&#125;bool Time::operator==(Time &amp;T)&#123; if (this-&gt;Hour == T.Hour&amp;&amp;this-&gt;Minute == T.Minute&amp;&amp;this-&gt;Second == T.Second) &#123; return true; &#125; else &#123; return false; &#125;&#125;void Time::sort(Time T)&#123; if (*this &gt; T) &#123; cout &lt;&lt; T &lt;&lt; \"-&gt;\" &lt;&lt; *this; &#125; else &#123; cout &lt;&lt; *this &lt;&lt; \"-&gt;\" &lt;&lt; T; &#125;&#125;ostream&amp; operator &lt;&lt; (ostream&amp; out, Time&amp; T)&#123; cout &lt;&lt; T.Hour &lt;&lt; \":\" &lt;&lt; T.Minute &lt;&lt; \":\" &lt;&lt; T.Second; return out;&#125;istream&amp; operator &gt;&gt; (istream&amp; in, Time&amp; T)&#123; char n; cin &gt;&gt; T.Hour &gt;&gt; n &gt;&gt; T.Minute &gt;&gt; n &gt;&gt; T.Second; return in;&#125;//Copyright©[2019]HalfGong.All rights Reserved main.cpp1234567891011121314151617181920212223242526272829303132333435#include\"pch.h\"#include&lt;iostream&gt;#include\"Time.h\"using namespace std;int main()&#123; Time time,time2,temp; char Operator; cout &lt;&lt; \"请输入时间\\n格式:“xx:xx:xx+xx:xx:xx或xx:xx:xx-xx:xx:xx”\\n\"; cin &gt;&gt; time &gt;&gt; Operator; if (Operator == '+') &#123; cin &gt;&gt; time2; cout &lt;&lt; \"\\n两个时间的先后顺序为：\\n\"; time.sort(time2); time + time2; cout &lt;&lt; \"\\n结果为：\\n\" &lt;&lt; time &lt;&lt; endl; &#125; else if (Operator == '-') &#123; cin &gt;&gt; time2; cout &lt;&lt; \"\\n两个时间的先后顺序为：\\n\"; time.sort(time2); time - time2; cout &lt;&lt; \"\\n结果为：\\n\" &lt;&lt; time &lt;&lt; endl; &#125; else &#123; cout &lt;&lt; \"非法符号\"; &#125;&#125;//Copyright©[2019]HalfGong.All rights Reserved","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-11-27T00:37:42.098Z","updated":"2019-11-27T00:37:42.098Z","comments":true,"path":"2019/11/27/hello-world/","link":"","permalink":"http://yoursite.com/2019/11/27/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}